# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: CICD

on:
  push:
    branches: [ main ]

jobs: 
  build:
 
    runs-on: ubuntu-latest
     
    steps:
    - uses: actions/checkout@v3
    
    - name: install jdk
      uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 11
        cache: gradle
    - name: permit
      run: |
        chmod +x gradlew
        ./gradlew build
        ls ./build/libs
      
    - name: Set up Docker Buildx 
      uses: docker/setup-buildx-action@v1 
      
    - name: docker ps
      run: docker ps
       
    - name: docker build
      run: |
        cp ./build/libs/*.war ./Dockerfile
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/m-dev:tomcat_$GITHUB_RUN_NUMBER ./Dockerfile
        docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/m-dev:tomcat_latest ./Dockerfile
        docker images
        
    - name: Login to DockerHub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    - name: docker push
      run: |
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/m-dev:tomcat_latest
        docker push ${{ secrets.DOCKERHUB_USERNAME }}/m-dev:tomcat_$GITHUB_RUN_NUMBER
   
    - name: AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-region: us-west-2
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

    - name: kube_config
      #run: aws eks update-kubeconfig --region us-west-2 --name uni
      run: export KUBECONFIG=~/.kube/config

    - name: get pod
      run: kubectl get pod

    - name: was-deploy restart
      run: kubectl rollout restart deployment was

    - name: mv .war
      run: mv ./build/libs/my-spring-board-0.0.1-SNAPSHOT.war ./build/libs/`date +%Y%m%d%H%M`.war

    - name: s3 upload
      run: |
        aws s3 ls s3://daun
        aws s3 cp ./build/libs/*.war s3://daun

